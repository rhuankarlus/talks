#!/bin/bash
set -e

getRealPath() {
    [[ $1 = /* ]] && echo "$1" || echo "$PWD/${1#./}"
}

SCRIPT_DIR=$(getRealPath $0)
BASEDIR=$(dirname "${SCRIPT_DIR}")

pushd ${BASEDIR}
sh ${BASEDIR}/clean

# recriando diretorio de dados do postgres
echo "Criando diretÃ³rios PostgreSQL..."
mkdir ${BASEDIR}/pg/data
mkdir ${BASEDIR}/pg/logs

# compilando addons e recriando node_modules
echo "Construindo ADDONs e carregando modulos..."
node-gyp configure build
yarn

# iniciando postgres
echo "Iniciando PostgreSQL..."
docker run \
    --name node-under-the-hood-pg \
    -v ${BASEDIR}/pg/data:/var/lib/postgresql/data \
    -v ${BASEDIR}/pg/scripts:/scripts \
    -v ${BASEDIR}/pg/logs:/logs \
    -p 5432:5432 \
    -e POSTGRES_PASSWORD=postgres \
    -d postgres

# aguardando finalizacao dos scripts do postgres
postgresOn=$(docker exec -it node-under-the-hood-pg psql -h localhost -U postgres -d postgres -c "SELECT 1" | grep '1 row') || true
while [[ "$postgresOn" != *"1 row"* ]]
do
    echo "Esperando PostgreSQL..."
    sleep 10
    postgresOn=$(docker exec -it node-under-the-hood-pg psql -h localhost -U postgres -d postgres -c "SELECT 1" | grep '1 row') || true
done

# populando banco de dados
nohup ${BASEDIR}/populate_db &
echo $! > ${BASEDIR}/nohup.pid

# essa trap eh utilizada para matar o processo de populate_db caso o processo principal seja finalizado ou cancelado
trap 'kill -9 `cat nohup.pid` && popd' 0

# iniciando aplicacao
echo "Iniciando servidor"
yarn start
